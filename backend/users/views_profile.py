from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from rest_framework.parsers import MultiPartParser, FormParser
from azure.storage.blob import BlobServiceClient
import os
from .serializers import ProfileSerializer

class ProfileView(APIView):
    permission_classes = [IsAuthenticated]
    parser_classes = (MultiPartParser, FormParser)

    def get(self, request):  # üõ† –î–û–î–ê–ù–û `GET` –î–õ–Ø –û–¢–†–ò–ú–ê–ù–ù–Ø –ü–†–û–§–Ü–õ–Æ
        serializer = ProfileSerializer(request.user)
        return Response(serializer.data, status=200)

    def put(self, request):  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        user = request.user
        serializer = ProfileSerializer(user, data=request.data, partial=True)

        if serializer.is_valid():
            if 'avatar' in request.FILES:
                avatar_file = request.FILES['avatar']
                blob_service_client = BlobServiceClient.from_connection_string(
                    os.getenv("AZURE_STORAGE_CONNECTION_STRING")
                )
                container_client = blob_service_client.get_container_client(os.getenv("AZURE_CONTAINER"))

                # –§–æ—Ä–º—É—î–º–æ —ñ–º'—è —Ñ–∞–π–ª—É
                blob_name = f"avatars/{user.id}_{avatar_file.name}"
                blob_client = container_client.get_blob_client(blob_name)

                # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª —É Azure
                blob_client.upload_blob(avatar_file, overwrite=True)

                # –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π URL
                user.avatar = blob_name  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —à–ª—è—Ö!

            user.save()
            serializer.save()
            return Response(serializer.data, status=200)

        return Response(serializer.errors, status=400)
